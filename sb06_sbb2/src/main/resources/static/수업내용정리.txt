[수업내용정리]
	org.sist.sb06_sbb.controller
1.    ㄴ controller.MainController.java
		/index => /index.html 요청 처리

2. JPA 사용
	SQL문 작성 => pstmt.execute()
	insert into question (id, subject, content) values (1, '안녕하세요', '가입 인사드립니다 ^^');
	insert into question (id, subject, content) values (2, '질문 있습니다', 'ORM이 궁금합니다');
[ORM] 엔티티 -> DB 연동
Question 엔티티 클래스
	Question q1 = new Question();
	q1.setSubject("안녕하세요");
	q1.setContent("가입인사드립니다.");
	this.question[Repository].save(q1);   JPA API save() 메서드
	
3. H2 데이터베이스 설치
	- 개발용 사용
	- 자바 기반의 경량 DBMS
	- 빠르게 개발, -> 운영하고자하는 DBMS (Oracle, MS SQL, My SQL 등등)
	- build.gradle 파일
		runtimeOnly 'com.h2database:h2'
		
https://www.thymeleaf.org/eclipse-plugin-update-site/ 타임리프 자동완성 플러그인

4. 설치한 H2 데이터베이스를 사용하기위한 설정
spring.h2.console.enabled=true
- h2 콘솔에 접속
- 웹 UI

spring.h2.console.path=/h2-console
- h2 콘솔에 접속 경로 (툴의 경로)


spring.datasource.url=jdbc:h2:~/local
- 데이터베이스에 접속 경로 (DB경로)
- "~" 사용자의 홈 디렉토리
- local은 데이터베이스 이름
- local.mv.db 데이터베이스 파일 생성
		C:\Windows\System32>cd c:\users\user
		
		c:\Users\user>copy con local.mv.db
		^Z ======> Ctrl+z
		        1개 파일이 복사되었습니다.
		
		c:\Users\user>




spring.datasource.driverClassName=org.h2.Driver
- DB에 접속하기위한 드라이버 클래스명

spring.datasource.username=sa
- 계정

spring.datasource.password=
- 비밀번호

5. JPA 환경 설정
H2 데이터베이스 설치 + 파일생성

implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

6. 
질문(Question) 테이블
속성 	이름   설명
id   		 질문 데이터의 고유 번호
subject   	 질문 데이터의 제목
content   	 질문 데이터의 내용
createDate   질문 데이터를 작성한 일시

답변(Answer)테이블
id   		답변 데이터의 고유 번호
question  	질문 데이터 (어떤 질문의 답변인지 알아야 하므로 이 속성이 필요하다.)
content   	답변 데이터의 내용
createDate  답변 데이터를 작성한 일시

7. 질문 엔티티, 답변 엔티티 생성
	question 패키지
	answer 패키지
	
	
Hibernate: 
create table question 
(
id integer generated by default as identity, 
content TEXT, 
create_date timestamp(6), 
subject varchar(200), 
primary key (id)
)

8. CRUD Repository(==DAO)
org.sist.sb06_sbb2.question
	ㄴ QuestionRepository.java
	
org.sist.sb06_sbb2.answer
	ㄴ AnswerRepository.java

9. JUnit 설치

	제목으로 검색
		// Repository
		// CrudRepository
		// PagingAndSortRepository
		// JpaRepository


question 질문 패키지
	ㄴ QuestionController.java 클래스 추가
answer	답변 패키지
controller 메인 컨트롤러

1. 템플릿 엔진 : 템플릿(html + java)을 사용하기 위해 스프링 부트에서 템플릿 엔진을 지원([Thymeleaf], Mustache, Groovy, Freemarker, Velocity 등)

2.
[Thymeleaf]
https://thymeleaf.org

3.
// 타임리프 모듈 추가
implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

4./question/list 요청
	question 폴더
		ㄴ list.html
		
5. 컨트롤러 -> [서비스] -> 리파지토리
	1) 트랜잭션 처리
	2) 복잡한 코드를 모듈화...
	**3) 엔티티 객체(DB 동기화) -> DTO 객체 변환
5-2. QuestionService.java

loop.index	1부터 시작하는 현재 반복의 인덱스.
loop.count	1부터 시작하는 반복 횟수.
loop.size	컬렉션의 총 크기.
loop.first	현재 반복이 첫 번째인지 여부 (true 또는 false).
loop.last	현재 반복이 마지막인지 여부 (true 또는 false).
loop.index-1	0부터 시작하는 현재 반복의 인덱스.
loop.current	현재 반복 중인 아이템.
loop.even	현재 인덱스가 짝수인지 여부 (true 또는 false).
loop.odd	현재 인덱스가 홀수인지 여부 (true 또는 false).
loop.hasNext	현재 반복 이후에 더 많은 아이템이 있는지 여부 (true 또는 false).


6. 질문 상세 보기 list.html 링크 주는 법 체크

7. 컨트롤러[V] + 서비스 + 리파지토리    체크/수정
						findById()
						
8. 답변 기능
	1) detail.html
		답변 작성 입력태그 구성... + ajax
		<form></form>
		/answer/create/${question.id} 컨트롤러 처리
	2) 답변 서비스
		답변 리파지토리
		
9. 웹 페이지 디자인...
	src/main/resources
		ㄴ static 폴더 안에 .... css, js 등등
			ㄴ style.css
			
10. 부트 스트랩(BootStrap) 사용
	https://getbootstrap.com
	bootstrap-5.3.3-dist.zip
	
11. 페이징 모듈화...
만약 : html 문서 구조의 body 요소를 제외한 모든 부분이 동일해서 중복.
타임리프에서는 이런 중복을 제거하기위해서 "템플릿상속" 기능을 제공한다.
	ㄴ 1) 기본 틀이 되는 템플릿을 먼저 작성
	ㄴ 2) 그 작성된 템플릿을 상속해서 html 구조..완성..
	






